{"version":3,"file":"component---src-pages-book-now-tsx-221e19842abe2a797133.js","mappings":"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","sources":["webpack://vladis-mobil-grooming/./src/pages/book-now.tsx"],"sourcesContent":["import React from 'react';\nimport { Fragment } from 'react';\n\nimport { Main } from 'components/layouts/Main';\nimport { Wave } from 'components/general/Wave';\nimport { SectionHeader } from 'components/general/SectionHeader';\nimport { FormInput } from 'components/general/FormInput';\nimport { ButtonPaw } from 'components/general/Button';\nimport { PlaybarSection } from 'components/sections/PlaybarSection/PlaybarSection';\n\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\n\nimport { navigate } from 'gatsby';\n\nfunction BookNowPage() {\n  const DATA = {\n    icon: 'icon-sections_beforethesession',\n    title: 'Request an appointment',\n    paragraph: 'Have any questions or concerns? Feel free to [ask](/contact-us/).'\n  };\n\n  interface ValuesI {\n    name: string;\n    email: string;\n    mobile: string;\n    message: string;\n    contact: string;\n    street: string;\n    city: string;\n    state: string;\n    zip: string;\n    date: string;\n  }\n\n  interface FormInputI {\n    as?: 'input' | 'textarea' | 'select' | 'mobile' | 'date';\n    name: keyof ValuesI;\n    label?: string;\n    type: 'text' | 'email' | 'textarea';\n    isRequired: boolean;\n    placeholder?: string;\n    options?: string[];\n    mask?: string;\n  }\n\n  const formFields: FormInputI[] = [\n    {\n      name: 'name',\n      type: 'text',\n      isRequired: true,\n      placeholder: 'Leo'\n    },\n    {\n      name: 'email',\n      type: 'email',\n      isRequired: true,\n      placeholder: 'leo@gmail.com'\n    },\n    {\n      as: 'mobile',\n      name: 'mobile',\n      type: 'text',\n      isRequired: true,\n      placeholder: '267-977-1310',\n      mask: '999-999-9999'\n    },\n    {\n      as: 'textarea',\n      name: 'message',\n      type: 'textarea',\n      isRequired: false,\n      placeholder: 'Any questions or concerns? Share your thoughts with us.'\n    },\n    {\n      name: 'contact',\n      label: 'How did you hear about us?',\n      type: 'text',\n      isRequired: false\n    },\n    {\n      name: 'street',\n      type: 'text',\n      isRequired: true,\n      placeholder: '11811 Double Trouble Rd'\n    },\n    {\n      name: 'city',\n      type: 'text',\n      isRequired: true,\n      placeholder: 'Philadelphia'\n    },\n    {\n      as: 'select',\n      name: 'state',\n      type: 'text',\n      isRequired: true,\n      options: ['PA', 'NJ', 'DE', 'NY']\n    },\n    {\n      name: 'zip',\n      type: 'text',\n      isRequired: true,\n      placeholder: '19116'\n    },\n    {\n      as: 'date',\n      name: 'date',\n      type: 'text',\n      isRequired: true,\n      placeholder: '01/01/2024'\n    }\n  ];\n\n  const handleSubmitFn = async (values: ValuesI, actions: FormikHelpers<ValuesI>) => {\n    const response = await fetch('https://formspree.io/f/mpwawkjk', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    });\n    console.log(JSON.stringify(values));\n\n    if (response.ok) {\n      alert('Message sent!');\n      actions.resetForm();\n      navigate('/');\n    } else {\n      alert('Failed to send message.');\n      actions.resetForm();\n    }\n  };\n\n  return (\n    <Main>\n      <PlaybarSection />\n\n      <Wave>\n        <div className=\"container\">\n          <div className=\"section-inner-gap\">\n            <SectionHeader\n              icon={DATA.icon}\n              title={DATA.title.replace(\n                'appointment',\n                `<span class=\"text-sky-500\">appointment</span>`\n              )}\n              paragraph={DATA.paragraph}\n            />\n\n            <Formik\n              initialValues={{\n                name: '',\n                email: '',\n                mobile: '',\n                message: '',\n                contact: '',\n                street: '',\n                city: 'Philadelphia',\n                state: 'PA',\n                zip: '',\n                date: ''\n              }}\n              validationSchema={Yup.object().shape({\n                name: Yup.string()\n                  .min(2, 'Name should be more than 1 character')\n                  .max(20, 'Name should be less than 20 characters')\n                  .required('Name is required'),\n                email: Yup.string().email('Invalid Email').required('Email is required'),\n                mobile: Yup.string()\n                  .matches(/^\\d{3}-\\d{3}-\\d{4}$/, 'Invalid Mobile')\n                  .required('Mobile is required'),\n                message: Yup.string()\n                  .min(2, 'Message should be more than 1 character')\n                  .max(500, 'Message should be less than 500 characters'),\n                contact: Yup.string().max(30),\n                street: Yup.string().max(30).required('Street is required'),\n                city: Yup.string().max(15).required('City is required'),\n                state: Yup.string().required('State is required'),\n                zip: Yup.string()\n                  .matches(/^\\d{5}$/, 'Invalid Zip')\n                  .required('Zip is required'),\n                date: Yup.string().required('Date is required')\n              })}\n              onSubmit={(values: ValuesI, actions) => handleSubmitFn(values, actions)}\n            >\n              {({ errors, touched }) => (\n                <Form className=\"section-inner-gap w-full xl:w-1/2\">\n                  <div className=\"flex flex-col gap-32 bg-white py-64 px-32 rounded-16\">\n                    {formFields.map(\n                      ({\n                        as,\n                        name,\n                        label,\n                        type,\n                        isRequired,\n                        placeholder,\n                        options,\n                        mask\n                      }: FormInputI) => (\n                        <div key={`input_${name}`}>\n                          <FormInput\n                            key={`input_${name}`}\n                            as={as}\n                            name={name}\n                            label={label}\n                            type={type}\n                            isRequired={isRequired}\n                            placeholder={placeholder}\n                            error={errors[name]}\n                            touched={touched[name]}\n                            options={options}\n                            mask={mask}\n                          />\n                          {name === 'contact' && (\n                            <p className=\"font-calistoga-regular text-32 mt-32\">\n                              Address where the <span className=\"text-sky-500\">groom</span> will\n                              take place...\n                            </p>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                  <ButtonPaw\n                    type=\"Primary_Blue\"\n                    aType=\"submit\"\n                    label=\"Send my Message\"\n                    icon=\"icon-general_arrow\"\n                  />\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </div>\n      </Wave>\n    </Main>\n  );\n}\n\nexport default BookNowPage;\n"],"names":["DATA","icon","title","paragraph","formFields","name","type","isRequired","placeholder","as","mask","label","options","React","Main","PlaybarSection","Wave","className","SectionHeader","replace","Formik","initialValues","email","mobile","message","contact","street","city","state","zip","date","validationSchema","Yup","shape","min","max","required","matches","onSubmit","values","actions","async","response","fetch","method","headers","body","JSON","stringify","console","log","ok","alert","resetForm","navigate","handleSubmitFn","_ref","errors","touched","Form","map","_ref2","key","FormInput","error","ButtonPaw","aType"],"sourceRoot":""}